@page "/cart"
@rendermode InteractiveServer
@using Newtonsoft.Json
@inject IHttpClientFactory ClientFactory
@inject CartService CartService
@inject OrderService OrderService
@using GoodsApi.Data.Entities
@inject SessionService SessionService
<h1>Корзина</h1>

<div class="spinner-container" style="display: @(isLoading ? "flex" : "none")">
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

@if (CartItems == null || !CartItems.Any())
{
    <p>Корзина пуста.</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Товар</th>
                    <th>Описание</th>
                    <th>Количество</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var CartItem in CartItems)
                {
                    <tr>
                        <td>
                            <img src="/uploads/@CartItem.Product.DetailImageFileName" alt="@CartItem.Product.Name" class="img-thumbnail" width="100" height="100"/>
                            <h4>@CartItem.Product.Name</h4>
                        </td>
                        <td>
                            <p>@CartItem.Product.Description</p>
                        </td>
                        <td>
                            <InputNumber @bind-Value="@CartItem.Quantity" min="1" max="100" />
                        </td>
                        <td>
                            <button class="btn btn-danger" @onclick="()=>RemoveFromCart(CartItem.Id)">Убрать</button>
                            <button class="btn btn-primary" @onclick="()=>UpdateQuantity(CartItem.Id, CartItem.Quantity)">Обновить количество</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<button class="btn btn-success" @onclick="()=>PlaceOrder()">Оформить заказ</button>
<button class="btn btn-success" @onclick="()=>ClearCart()">Очистить корзину</button>

@code {
    private IEnumerable<CartItem>? CartItems = Array.Empty<CartItem>();
    private bool isLoading = true;

    protected async Task LoadCart()
    {
        isLoading = true;
        await Task.Delay(100);
        isLoading = false;
        CartItems = await CartService.GetCartItemsAsync();
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool a)
    {
        if (a)
        await LoadCart();
    }

    private async Task RemoveFromCart(long cartItemId)
    {
        await CartService.DeleteCartItemAsync(cartItemId);
        await LoadCart();
    }

    private async Task UpdateQuantity(long cartItemId, int quantity)
    {
        await CartService.UpdateCartItem(cartItemId, quantity);
        await LoadCart();
    }

    private async Task PlaceOrder()
    {
        await OrderService.CreateOrderAsync(CartItems.Select(i => i.ProductId).ToList());
        await LoadCart();
    }

    private async Task ClearCart()
    {
        await CartService.ClearCart();
        await LoadCart();
    }
}
